var mysql = require("mysql")
    crypto = require('crypto'),
    fs = require("fs"),
    EventEmitter = require('events').EventEmitter,
    sprintf = require("sprintf").sprintf;

// 连接数据库
var config_json = fs.readFileSync(__dirname+"/../../../shared/db");

var conn = JSON.parse(config_json);
var db;
handleError();

function handleError(){
    db  = mysql.createConnection(conn);
    db.connect(function(err) {
            if ( !err ) {
                console.log("Connected to MySQL");

            } else if ( err ) {
                console.log(err);
            }
        }

    );
    /*
    *断线则重连
     */
    db.on('error', function (err) {
        console.log('db error', err);
        // 如果是连接断开，自动重新连接
        if (err.code == 'PROTOCOL_CONNECTION_LOST') {
            handleError();
        } else {
            throw err;
        }
    });

}

/**
 * @constructs user_info
*@description 用户基本信息
 */
function user_info(){
    /**
     * @param {string} openid
     * @callback {get_by_openid~callback} callback
    *@description 获取用户信息
     */
    this.get_by_openid = function(openid,callback){
        var sql ="SELECT * FROM user_info WHERE openid = '" + openid+"'";
        db.query(sql,function(err,result){
            console.log(result +"a");
            if(err){
                console.log(err);
                callback("-1");
            }
            else{
                callback(result[0]);
            }
        })
    }
    /**
     * @param {string} openid
     * @description 新增用户
    *
     */
    this.add_user = function(openid){
        var sql_temp = "INSERT INTO user_info(openid,left_chance) SELECT '%s',1 FROM dual WHERE NOT EXISTS( SELECT * FROM user_info WHERE openid = '%s')";
        var sql =sprintf.sprintf(sql_temp,openid,openid);
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
            }
        })
    }
    /**
     * @param {string} openid
     * @param {set} "+" or "-"
    *@description 增抽奖机会
     */
    this.change_chances = function(openid,type){
        var sql = "UPDATE user_info SET left_chance = left_chance"+type+"1";
        db.query(sql,function(err,result){
            if(err){
                console.log(err);

            }
        })
    }
}
/**
*@description 活动集合
*@constructs   activities_set
 */
function activities_set(){
    /**
    *@description 获取所有活动
     * @callback {get_all~callback}
     */
    this.get_all= function(callback){
        var sql = "SELECT * FROM activity_set";
        function get_it(callback) {
            db.query(sql,function(err,result){
                if(err){
                  console.log(err);
                  callback('-1');
                }
                else{
                    callback(result);
                }
            })
        }
    }
    /**
     *
    *@description 获取还在激活状态的活动
     * @callback {get_active ~ callback}
     */
    this.get_active = function(callback){
        var sql = "SELECT * FROM activity_set WHERE is_active = 1";
        db.query(sql,function(err,result){
            console.log(result);
                if(err){
                    console.log(err);
                    callback('-1');
                }
                else{
                    callback(result);
                }
            })

    }
    /**
    *@description 将活动改为不可用
     * @param {number} id
     */
    this.cancel_active = function(id){
       var sql = "UPDATE activity_set SET is_active = 0 WHERE activity_id = " +id;
       function cancel_it(){
           db.query(sql,function(err,result){
                 if(err) {
                    console.log(err);
                     cancel_it();
                 }

           });
       }
    }
    /**
    *@description 新建活动
     *
     */
    this.new_activity = function(){
         var sql = "INSERT INTO activity_set VALUES('','"+ new Date().Format("yy-MM-dd hh:mm:ss")+"',1)";
         (function create_new(){
            db.query(sql,function(err,result){
                if(err){
                    console.log(err);
                    create_new();
                }
            })
        })();
    }
}
/**
 * @constructs activity_index
*@description 活动概览
 */
function activity_index(){
    var activi_operate = new activities_set();
    /**
    *@description 获取所有的活动
     * @callback {get_all ~ callback}
     */
    this.get_all = function(callback){
        var sql ="SELECT * FROM activity_index";
        db.query(sql,function(err,result){
            if(err)
                console.log(err);
            else{
                callback(result);
            }
        })
    }
    /**
    *@description 获取有效期内的活动
     * @callback {get_effective ~ callback}
     */
    this.get_effective = function(callback){
        var sql = "SELECT * FROM activity_index WHERE 	activity_finish > NOW()";
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
            }
            else{
                callback(result);
            }
        })
    }
    /**
     * @param {number} id
    *@description 根据id获取活动的概览
     * @callback {get_by_id ~ callback}
     */
    this.get_by_id = function(id,callback){
        var sql = "SELECT * FROM activity_index WHERE activity_id = "+id;
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
            }
            else if (result[0]){

                result.forEach(function(value){
                    if(new Date(value.activity_finish) < new Date())
                        activi_operate.cancel_active(id);
                });
                callback(result[0]);

            }
            else{
                callback('-1');
            }
        })
    }
    /**
     * @param {object} obj，包含标题，开始结束时间，最大机会数和活动id
    *@description 设定详情
     */
    this.set_index  = function(obj){
        var sql_temp = "UPDATE activity_index SET event_title = '%s'" +
            ",activity_start='%s',activity_finish = '%s',max_time=%d WHERE activity_id="+
            obj.activity_id;
        var sql = sprintf.sprintf(sql_temp,obj.event_title,obj.activity_start,obj.activity_finish,obj.max_time);
        (function set_it(){
            db.query(sql,function(err,result){
                if(err){
                    console.log(err);
                    set_it();
                }
            })
        })()
    }
    /**
    *@description 新增活动
     *@param {object} obj，包含标题，开始结束时间，最大机会数和活动id
     */
    this.new_activity = function(obj,callback){
        var sql_temp = "INSERT INTO activity_index VALUES ('','%s','%s','%s',%s )";
        var sql = sprintf.sprintf(sql_temp,obj.event_title,obj.activity_start,obj.activity_finish,obj.max_time);
        (function set_it(){
            db.query(sql,function(err,result){
                if(err){
                    console.log(err);
                    set_it();
                }
                else{
                    db.query("SELECT MAX(activity_id) AS latest_ins FROM activity_index",function(err,result1){
                        if(err){
                            console.log(err);
                        }
                        else{
                            callback(result1[0].latest_ins)
                        }
                    })
                }
            })
        })();
    }
}
/**
 * @constructs activity_info
*@description 活动详细信息
 */

function activity_info(){
    /**
    *@description 获取所有的活动的详情
     * @callback {get_all ~ callback}
     */
    this.get_all = function(callback){
         var sql = "SELECT * FROM activity_info";
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
                callback(-1);
            }
            else{
                callback(result);
            }
        })
    }
    /**
     *@description 获取指定ID的活动的详情
     * @param {number} id
     * @callback {get_all ~ callback}
     */
    this.get_id = function(id,callback){
        var sql = "SELECT * FROM activity_info WHERE activity_id = " + id;
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
                callback(-1);
            }
            else{

                callback(result[0]);
            }
        })
    }

    /**
     * @param {object} obj包含标题，描述,图片，和是否为招聘
    *@description 新增一个活动的活动详情
     */
    this.new_info = function(obj){
        var sql_temp = "INSERT INTO activity_info VALUES('','%s','%s','%s',%d)";
        var sql = sprintf.sprintf(sql_temp,obj.event_title,obj.description,obj.picUrl,obj.is_hire?1:0);
        (function new_in(){
            db.query(sql,function(err,result){
                if(err){
                    console.log(err);
                    new_in();
                }
            })
        })();
    }
    /**
     * @param {object} obj包含标题，描述,图片，和是否为招聘 以及id
    *@description 修改活动详情
     */
    this.set_info = function(obj){
        var sql_temp = "UPDATE  activity_info SET event_title = '%s', 	event_description= '%s', 	" +
            "picUrl = '%s',is_hire = %d WHERE activity_id = "
            +obj.activity_id;
        var sql = sprintf.sprintf(sql_temp,obj.title,obj.description,obj.picUrl,new Date(obj.activity_start).Format("yy-MM-dd hh:mm:ss"),
            new Date(obj.activity_finish).Format("yy-MM-dd hh:mm:ss"),obj.max_time,obj.is_hire);
        (function new_in(){
            db.query(sql,function(err,result){
                if(err){
                    console.log(err);
                    new_in();
                }
            })
        })();
    }
}

/**
 * @constructs award_set
*@description 奖品集合设置
 */
function award_set(){
    /**
    *@description 新增一个抽奖
     * @param {number} asso 相关联的活动
     * @callback {add_award ~ callback} 参数为奖品id
     */
    this.add_award = function(asso,callback){
        db.query("UPDATE award_set SET is_active=0",function(err,result1){
            if(err){
                console.log(err)
            }
            else{
                var sql_temp = "INSERT INTO  award_set VALUES('','%s',1,%d)" ;
                var now = new Date().Format("yy-MM-dd hh:mm:ss");
                var sql = sprintf.sprintf(sql_temp,now,asso?asso:0);;
                add_it();
                function add_it(){
                    db.query(sql,function(err,result){
                        if(err){
                            console.log(err);
                            add_it();
                        }
                        else{
                            db.query("SELECT id FROM award_set WHERE release_time= '" + now+"'",function(err,result){
                                if(err){
                                    console.log(err);
                                }
                                else{
                                    callback(result[0].id);
                                }
                            })
                        }
                    })

                };
            }
        })

        }
    /**
    *@description 取消一个抽奖的激活
     * @param {number} id 活动id
     */
    this.disable = function(id){
        var sql = "UPDATE award_set SET is_active = 0 WHERE id = " + id;
        function dis_it(){
            db.query(sql,function(err,result){
                if(err){
                    console.log(err);
                    dis_it();
                }
            })
        }
    }
    /**
    *@description 获取进行中的抽奖
     * @callback {get_active ~ callback} 参数为普通的激活状态的奖品id
     */
    this.get_active = function(callback){
        var sql = "SELECT * FROM award_set WHERE is_active = 1 ";
        db.query(sql,function(err,result){
            if(err)
                console.log(err);
            else
                callback(result[0]);
        })
    }
    /**
     *@description 获取进行中的抽奖
     * @callback {get_active ~ callback} 参数为普通的激活状态的奖品id
     */
    this.get_general_award = function(callback){
        var sql = "SELECT * FROM award_set WHERE is_active = 1 AND associate_activity = 0";
        db.query(sql,function(err,result){
            if(err)
                console.log(err);
            else
                callback(result[0]);
        })
    }
    /**
     *@description 获取全部的抽奖
     * @callback {get_active ~ callback} 参数为普通的激活状态的奖品id
     */
    this.get_all_award = function(callback){
        var sql = "SELECT * FROM award_set";
        db.query(sql,function(err,result){
            if(err)
                console.log(err);
            else
                callback(result);
        })
    }
}
/**
 *@constructs award_info
*@description 奖品详情
 */
function award_info(){
    /**
    *@description 新增加抽奖活动
    * @param: {object} obj{awardlevel,award_name,awrad_left,	award_prob}
     * @param {number} id 活动id
     */
     this.new_award = function(id,obj){
        var sql_temp = "INSERT INTO award_" + id +" VALUES('',%s,'%s',%s,%s,'%s')";
         obj.arr.forEach(function(value){

             var sql = sprintf.sprintf(sql_temp,value.award_level,value.award_name,value.award_left,value.award_prob,value.award_type);
             db.query(sql,function(err,result){
                 if(err){
                     console.log(err);
                 }
             })
         })
     }
    /**
     * @param {number} id 奖品表id
     * @callback {get_all_award ~ callback} 回调参数为奖品列表
    *@description 根据奖品表id获取奖品信息
     */
    this.get_all_award = function (obj,callback){
        var sql = "SELECT * FROM award_" + obj;
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
            }
            else{
                callback(result);
            }
        })
    }
    /**
     * @param {number} id
     * @param {number} level
     * @callback {get_award ~ callback}
     *@description 根据奖品表id和奖的等级获取奖品信息
     */
    this.get_award = function (id,level,callback){
        var sql = "SELECT * FROM award_" + id +" WHERE award_level = " + level;
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
            }
            else{
                callback(result[0]);
            }
        })
    }
    /**
    *@description 修改指定id中的奖品内容
     * @param {number} id
     * @param {object} obj包括奖品等级，奖品名，剩余个数，概率，类型以及其id
     */
    this.set_award = function(id,obj){
        var sql_temp = "UPDATE award_" + id + "SET award_level = %d, award_name = '%s',	awrad_left =%d," +
            " award_prob = %f ,award_type= '%s' WHERE the_id=%d";
        var sql   = sprintf.sprintf(sql_temp,obj.award_level,obj.award_name,obj.award_left,obj.award_prob,obj.award_type,obj.the_id);
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
            }
        })
    }
    /**
    *@description 中奖之后的处理。即减少奖品的剩余个数
     * @param {number} id
     * @param {number} award_level
     */
    this.after_luck = function(id,award_level){
        var sql = "UPDATE award_" + id + "SET awrad_left=award_left-1 WHERE award_level = " + award_level;
        (function minus_it(){
            db.query(sql,function(err,result){
                 if(err){
                     console.log();
                     minus_it();
                 }
            })
        })();
    }
}
/**
*@description 转发流水
 * @constructs _forwarding
 */
function _forwarding(){
    /**
    *@description 根据活动id获得该活动转发流水
     * @param {number} id
     * @callback {get_by_id ~ callback}
     */
     this.get_by_id = function(id,callback){
          var sql = "SELECT * FROM forwarding_" + id;
         db.query(sql,function(err,result){
             if(err)
                console.log(err);
             callback(result);
         })
     }
    /**
     * @param {object} 参数包括转发者id和点击者id
     * @description 新增一个转发
     */

    this.new_one = function(obj){
        var sql_temp = "INSERT INTO forwarding_" + obj.activity_id + " VALUES('%s','%s','%s',1)";
        var sql = sprintf.sprintf(sql_temp,obj.openid,obj.openid_c,new Date().Format("yy-MM-dd hh:mm:ss"));
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
            }
        })
    }
    /**
    *@description 根据openid获取已转发次数
     * @param {number} id 活动id
     * @param {string} openid
     * @callback 参数为已获得的次数
     */
    this.ever_forward = function(openid,id,callback){
        var sql = "SELECT COUNT(*) FROM forwarding_"+ id +" AS total_for WHERE openid  = '" + openid +"'";
        db.query(sql,function(err,result){
            if(err)
                console.log(err);
            callback(result[0].total_for);
        })
    }
    /**
    *@description 是否已有相同的记录
     * @param {string} openid 转发者 openid
     * @param {string} openid_c 点击者openid
     * @callback 回调参数为1则已有记录，0则无记录
     */
    this.is_ever_got = function(id,openid,openid_c,callback){
        var sql = "SELECT * FROM forwarding_"+id + " WHERE openid= '" +
            openid + "' AND openid_c = '" + openid_c +"'";
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
                callback(-1);
            }
            else{
                if(result[0]){
                    callback(1);
                }
                else{
                    callback(0);
                }
            }
        })
    }
}
/**
*@description 抽奖流水
 * @constructs lottery_result
 */
function lottery_result(){
    /**
    *@description 获取所有的抽奖流水
     * @callback 回调参数为所有的抽奖流水
     */
    this.get_all = function(callback){
        var sql = "SELECT * FROM lottery_result";
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
                callback('-1');
            }
            else{
                callback(result);
            }
        })
    }
    /*
    *获取实物奖品抽奖流水
     */
    this.get_real = function(callback){
        var sql = "SELECT * FROM lottery_result WHERE award_type = 'real'";
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
                callback('-1');
            }
            else{
                callback(result);
            }
        })
    }
    /*
    *根据openid获取抽奖结果
     */
    this.get_by_openid = function(openid,callback){
        var sql = "SELECT * FROM lottery_result WHERE openid  ='" +openid+"'" ;
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
            }
            else{
                callback(result);
            }
        })
    }
    /*
    *设定已兑奖
     */
    this.set_finished = function(id){
        var sql= "UPDATE lottery_result SET is_recieved = 1 WHERE lottery_id="+id;
        db.query(sql,function(err,result){
            if(err){
                db.query(id,function(err,result){
                    if(err){
                       console.log(err);
                    }
                })
                console.log(err);
            }
        })
    }
    /*
    *增加一个抽奖结果
     */
    this.add_result = function(obj){
        var sql_temp = "INSERT INTO lottery_result VALUES('','%s',%d,'%s',%d,'%s','%s')";
        obj.is_recieved =  obj.is_recieved || 1;
        obj.the_code = obj.the_code ||0;
        var sql = sprintf.sprintf(sql_temp,obj.openid,obj.is_award,new Date().Format("yy-MM-dd hh:mm:ss"),obj.is_recieved,
            obj.the_code,obj.award_type);
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
            }
        })
    }
}
/*
*实物奖品详情
 */
function lottery_info(){
    this.get_by_id = function(id,callback){
        var sql = "SELECT * FROM lottery_info WHERE the_id =" + id;
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
            }
            else{
                callback(result[0]);
            }

        })
    }
    this.add_one = function(obj,callback){
        var sql_temp = "INSERT INTO lottery_info VALUES('',%d,%d,'%s','%s') ";
        var sql = sprintf.sprintf(sql_temp,obj.award_level,obj.award_id,obj.adress_info,obj.mobile_number);
        db.query(sql,function(err,result){
            if(err)
                console.log(err);
            db.query("SELECT max(the_id) AS latest_id FROM lottery_info",function(err,result){
                if(err){
                    console.log(err);
                    callback(-1);
                }
                else{
                    callback(result[0].latest_id)
                }
            })
        })
    }
    this.set_address = function(id,address_info,mobile_number){
        var sql ="UPDATE lottery_info SET address_info = '" + address_info +
            "',mobile_bumber = '" + mobile_number +"' WHERE the_id = " + id;
        db.query(sql,function(err,result){
            if(err){
                db.query(sql);
            }
        })
    }
}
/*
*一些杂碎的东西
 */
function util(){
    /*
    *新建转发活动的表
     */
    this.new_forwarding_table = function(id){
         var sql = "CREATE TABLE forwarding_" + id +" LIKE forwarding_temp";
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
                db.query(sql);
            }

        })
    }
    /*
    *新建奖品的表
     */
    this.new_award_table = function(id,callback){
        var sql =  "CREATE TABLE award_" + id +" LIKE award_temp";
        db.query(sql,function(err,result){
            if(err){
                console.log(err);
                callback('-1');
            }
            else{
                callback('0') ;
            }
        })
    }
    /*
    *获取每个活动的已获得的机会数
     */
    this.get_left_chance = function(openid,arr,callback){
        var note_it = new EventEmitter();
        var resArr = [];
        var statics = 0;
        arr.forEach(function(value){
            var sql = "SELECT COUNT(*) AS total_got FROM forwarding_" + value +" WHERE openid = '" + openid +"'";
            db.query(sql,function(err,result){
                if(err){
                    console.log(err);
                    resArr[resArr.length] = {};
                }
                else{
                    resArr[resArr.length] = result[0].total_got;

                }
                note_it.emit("ready");
            })
        })
        note_it.on("ready",function(){
            statics += 1;
            if(statics == arr.length){
                callback(resArr);
            }
        })


    }
}

var userInfo = new user_info();
var activitySet = new activities_set();
var activityIndex = new activity_index();
var activityInfo = new activity_info();
var awardSet = new award_set();
var awardInfo = new award_info();
var forwarding = new _forwarding();
var lotteryResult = new lottery_result();
var lotteryInfo  = new lottery_info();
var utils = new util();
/*
*获取用户信息
 */
exports.get_user_info = function(openid,callback){
      userInfo.get_by_openid(openid,function(result){
            if(result){
                callback(result);
            }
          else{
               userInfo.add_user(openid);
                callback({openid:openid,left_chance:1})
            }
      })
}
/*
*获取正在进行的活动
 */
exports.get_holding_activity = function(callback){
     activitySet.get_active(function(result){
         if(result[0]){
             (function(){
                 var resArr = [];
                 var statics = 0;
                 var note_it = new EventEmitter();
                 result.forEach(function(value){
                     activityIndex.get_by_id(value.activity_id,function(result1){
                         if( new Date(result1.activity_finish) > new Date()){
                             resArr[resArr.length] = result1;
                         }
                         note_it.emit("ready");
                     })
                 });
                 note_it.on("ready",function(){
                     statics += 1;
                     if(statics == result.length){
                         callback(resArr);
                     }
                 });
             })();
         }
         else{
             callback([]);
         }
     })
}

/*
*获取活动详情
 */
exports.get_activity_info = function(activity_id,callback){
    activityInfo.get_id(activity_id,function(result){
        callback(result);
    })
}
/*
*根据传入的id数组获取已获得抽奖机会次数
 */
exports.get_left_chance = function(openid,arr,callback){
      utils.get_left_chance(openid,arr,function(result){
          callback(result);
      })
}
/*
*当分享的活动链接被点击时的处理
 */
exports.process_click = function(openid,openid_c,activity_id){
    if(openid&&openid_c&&openid!=openid_c){
           forwarding.is_ever_got(activity_id,openid,openid_c,function(result){
               switch(result){
                   case 0:
                       forwarding.new_one({activity_id:activity_id,openid:openid,openid_c:openid_c});
                       userInfo.add_user(openid_c);
                       userInfo.change_chances(openid,"+");
                       break;
                   case 1:
                       break;
                   default :

               }
           })
    }

}

/*
*根据openid获取抽奖历史
 */
exports.lottery_history = function(openid,callback){
    lotteryResult.get_by_openid(openid,function(result){
        callback(result);
    })
}
/*
*根据code获取实物奖品信息
 */
exports.getAwardInfo = function(the_code,callback){
    lotteryInfo.get_by_id(the_code,function(result){
        awardInfo.get_award(result.award_id,result.award_level,function(result1){
            callback(result1);
        })
    })
}
/*
*填写实物奖品的收货地址和电话号码
 */
exports.fillAwardAddress = function(id,address_info,mobile_number){
    lotteryInfo.set_address(id,address_info,mobile_number);
}
/*
*进行抽奖
 */
exports.lottery_generate = function(openid,callback){
    awardSet.get_general_award(function(result){
        if(result){
            userInfo.change_chances(openid,'-');
            /*
            *获取奖池信息
             */
           awardInfo.get_all_award(result.id,function(result1){
               var award_pool = [];
               var now_position =  0;
               /*
               *设定每个中奖的区间
                */
               result1.forEach(function(value){
                    if(value.awrad_left){
                        award_pool[award_pool.length] = value;
                        award_pool[i].min = now_position;
                        award_pool[i].max = now_position + award_pool[i].award_prob;
                        now_position = award_pool[i].max;
                    }
               })
               function find_it(the_value){
                   for(var i = 0; i < award_pool.length; i+=1){
                       if(award_pool[i].min <=the_value&&award_pool[i].max>the_value){
                           return i;
                       }
                   }
                   return -1;
               }
              var award_result = find_it(Math.random());
               if(award_result == -1){
                   /*
                   *增加到抽奖流水
                    */
                   lotteryResult.add_result({openid:openid,is_award:0,award_code:0,award_type:"virtual"})
                   callback(0);//表示没有中奖
               }
               else{
                   /*
                   *移除一个奖品
                    */
                   awardInfo.after_luck(result,award_pool[award_result].award_level);
                   var obj_info = {
                       award_level:award_pool[award_result].award_level,
                       award_id:result,
                       address_info:'',
                       mobile_number:''
                   }
                   /*
                   *增加到中奖信息表
                    */
                   lotteryInfo.add_one(obj_info,function(the_id){
                       var obj ={
                           openid:openid,
                           is_award:1,
                           award_code:the_id,
                           award_type:award_pool[award_result].award_type
                       }
                       /*
                       *增加到抽奖流水
                        */
                      lotteryResult.add_result(obj);
                       obj.award_level = award_pool[award_result].award_level;
                       obj.award_name = award_pool[award_result].award_name;
                       callback(obj);
                   });

               }
           })
        }
        else{
            callback('-1'); //‘-1'表示暂时没有抽奖活动
        }
    })
}



 /*
 *增加活动
  */
exports.new_activity = function(obj){
    activitySet.new_activity();
    activityIndex.new_activity(obj,function(id){
        utils.new_forwarding_table(id);
    });
    activityInfo.new_info(obj);

}
/*
*增加奖品
 */
exports.new_award = function(obj,cb){
    awardSet.add_award(0,function(id){
        utils.new_award_table(id,function(result){
            awardInfo.new_award(id,obj);
            cb("success!");
        })
    });

}
/*
*转发流水
 */
exports.forwarding_info = function(id,callback){
    forwarding.get_by_id(id,function(result){
        callback(result);
    })
}
/*
*抽奖流水
 */
exports.lottery_info =   lotteryResult.get_all;
/*
*变更兑奖状态
 */
exports.change_recieve = lotteryResult.set_finished;
/*
*实物奖品流水
 */
exports.lottery_real_info = lotteryResult.get_real;

/*
*获取活动列表
 */
exports.get_all_activities = activityIndex.get_all;
/*
*获取所有的奖品列表
 */
exports.get_all_award = awardSet.get_all_award;
/*
*获取奖品表的信息
 */
exports.get_award_detail = function(id,callback){
    awardInfo.get_all_award(id,function(result){
        callback(result);
    })
}
/*
*格式化js日期的自定义方法
 */
Date.prototype.Format = function (fmt) { //author: meizz
    var o = {
        "M+": this.getMonth() + 1, //月份
        "d+": this.getDate(), //日
        "h+": this.getHours(), //小时
        "m+": this.getMinutes(), //分
        "s+": this.getSeconds(), //秒
        "q+": Math.floor((this.getMonth() + 3) / 3), //季度
        "S": this.getMilliseconds() //毫秒
    };
    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
    for (var k in o)
        if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
    return fmt;
}



