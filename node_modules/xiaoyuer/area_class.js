var fs = require('fs'),
    creypto = require('crypto');

/*
*对于地区代码的操作
* 包括读取和更新
 */
exports.area = (function(){
    var arear = JSON.parse(fs.readFileSync(__dirname+"/../../shared/area-code"));
    function update(obj){
        arear = obj;
        fs.writeFileSync(_dirname+"/../../shared/area-code",arear);
        return JSON.stringify({code:0}) ;
    }
    function get_area(){
        return arear;
    }
    return{
        update:update,
        get:get_area
    }
})();

/*
*对于分类的操作
* 包括读取和更新
 */
exports.classify = (function(){
    var arear = JSON.parse(fs.readFileSync(__dirname+"/../../shared/classify"));
    function update(obj){
        arear = obj;
        fs.writeFileSync(_dirname+"/../../shared/classify",arear);
        return JSON.stringify({code:0}) ;
    }
    function get_class(){
        return arear;
    }
    return{
        update:update,
        get:get_class
    }
})();

/*
 *对于公益分类的操作
 * 包括读取和更新
 */
exports.welfare_calssify=(function(){
    var arear = JSON.parse(fs.readFileSync(__dirname+"/../../shared/welfare-class"));
    function update(obj){
        arear = obj;
        fs.writeFileSync(_dirname+"/../../shared/welfare-class",arear);
        return JSON.stringify({code:0}) ;
    }
    function get_class(){
        return arear;
    }
    return{
        update:update,
        get:get_class
    }
})()

/*
*验证权限
 */
exports.check = (function(){
    var token = JSON.parse(fs.readFileSync(__dirname+"/../../shared/appConfig")).token;
    var sha1 = crypto.createHash('sha1')
    return function(req,res,next){
        if(req.query.timestamp&req.query.check){
            sha1.update(token);
            sha1.update(req.query.timestamp);
            if(req.query.check==sha1.digest('hex')){
                next();
            }
            else
                res.send(JSON.stringify({code:"-10","err":"permission denied"}))
        }
        else
            res.send(JSON.stringify({code:"-10","err":"permission denied"}))
    }
})()

