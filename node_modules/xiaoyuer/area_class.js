var fs = require('fs'),
    jsPinyin = require("xiaoyuer/pinyin.js"),
    mysql = require("mysql"),
    creypto = require('crypto');



var pinyin = new jsPinyin.Pinyin ();
/*
*对于地区代码的操作
* 包括读取和更新
 */
exports.area = (function(){
    var arear = JSON.parse(fs.readFileSync(__dirname+"/../../shared/area-code"));
    function update(obj){
        arear = obj;
        fs.writeFileSync(__dirname+"/../../shared/area-code",arear);
        return JSON.stringify({code:0}) ;
    }
    function get_area(){
        return arear;
    }
    return{
        update:update,
        get:get_area
    }
})();

/*
*对于分类的操作
* 包括读取和更新
 */
exports.classify = (function(){
    var area = JSON.parse(fs.readFileSync(__dirname+"/../../shared/classify"));
    var structure = [];
    var classify1 = [];
    area.forEach(function(value){
        classify1[classify1.length] = value;
        classify1[classify1.length-1].pinyin = pinyin.getFullChars(value.name);
    });
    structure = sort_object_value(classify1);
    /*
     *反向冒泡排序
     */
    function sort_object_value(obj){
        var temp = "";
        var j = 0;
        for(var i=obj.length;i>0;i -= 1){
            j = 0;
            for(;j< i;j += 1){
                if(obj[j].pinyin > obj[i-1].pinyin){
                    //不要打错了
                    temp = obj[i-1];
                    obj[i-1] = obj[j];
                    obj[j] = temp;
                }
            }
        }
        var now_char = "";
        var temp = [];
        obj.forEach(function(value){
            if(value.pinyin.charAt(0)!= now_char){
                now_char =   value.pinyin.charAt(0);
                temp[temp.length] = {};
                temp[temp.length-1].character = value.pinyin.charAt(0);
                temp[temp.length-1].items = [];
            }
            temp[temp.length-1].items[temp[temp.length-1].items.length] = value;
        })
        return temp;
    }

    function update(){
        /*
        *其实是为了让pm-2重启应用
         */
        get_classify_code(function(){
            throw "error";
        })
        return JSON.stringify({code:0}) ;
    }
    function get_class(){

        return structure;
    }
    function get_classify_code(callback){
        var config_json = fs.readFileSync(__dirname+"/../../shared/db");
        var conn = JSON.parse(config_json);
        var db;
        handleError();
        function handleError(){
            db  = mysql.createConnection(conn);
            db.connect(function(err) {
                    if ( !err ) {
                        console.log("Connected to MySQL");

                    } else if ( err ) {
                        console.log(err);
                    }
                }

            );
        }
        var res1 =[];

        db.query("SELECT * FROM base_classify",function(err,result){
            result.forEach(function(value){
                if(!value.Is_Parent){
                    var temp = {};
                    temp.name = value.Name;
                    temp.id = "";
                    while(value.Parent_Id ){
                        temp.id = value.ID + "-" + temp.id;
                        value = result[value.Parent_Id-1];
                    }
                    temp.id = temp.id.slice(0,-1);
                    res1[res1.length] = temp;
                }
            })
            fs.writeFileSync(__dirname+"/../../shared/classify",JSON.stringify(res1));
            callback();

        })
        db.end();
    }
    function get_name_by_id(id){
        var name = "";
        area.forEach(function(value){

            if(value.id==id){
                name = value.name;
                return ;
            }


        })
        return name;
    }
    function get_classarr_by_class(id){
       var arr =id.split("-");
        var temp = {};
        var resArr = [];
        arr.forEach(function(value){
             temp.id = "classify" + (resArr.length + 1);
            temp.value = value;
            resArr[resArr.length] = temp;
        })
        return resArr;
    }
    return{
        update:update,
        get:get_class,
        get_name_by_id:get_name_by_id,
        to_param:get_classarr_by_class
    }
})();

/*
 *对于公益分类的操作
 * 包括读取和更新
 */
exports.welfare_calssify=(function(){
    var area = JSON.parse(fs.readFileSync(__dirname+"/../../shared/welfare-class"));
    var structure = [];
    var classify1 = [];
    area.forEach(function(value){
        classify1[classify1.length] = value;
        classify1[classify1.length-1].pinyin = pinyin.getFullChars(value.name);
    });
    structure = sort_object_value(classify1);
    /*
     *反向冒泡排序
     */
    function sort_object_value(obj){
        var temp = "";
        var j = 0;
        for(var i=obj.length;i>0;i -= 1){
            j = 0;
            for(;j< i;j += 1){
                if(obj[j].pinyin > obj[i-1].pinyin){
                    //不要打错了
                    temp = obj[i-1];
                    obj[i-1] = obj[j];
                    obj[j] = temp;
                }
            }
        }
        var now_char = "";
        var temp = [];
        obj.forEach(function(value){
            if(value.pinyin.charAt(0)!= now_char){
                now_char =   value.pinyin.charAt(0);
                temp[temp.length] = {};
                temp[temp.length-1].character = value.pinyin.charAt(0);
                temp[temp.length-1].items = [];
            }
            temp[temp.length-1].items[temp[temp.length-1].items.length] = value;
        })
        return temp;
    }
    function get_classarr_by_class(id){
        var temp = {};
        temp.id = "class";
        temp.value = id;
        return [temp];
    }
    function update(obj){
        area = obj;
        var structure = [];
        var classify1 = [];
        area.forEach(function(value){
            classify1[classify1.length] = value;
            classify1[classify1.length-1].pinyin = pinyin.getFullChars(value.name);
        });
        structure = sort_object_value(classify1);
        fs.writeFileSync(__dirname+"/../../shared/welfare-class",arear);
        return JSON.stringify({code:0}) ;
    }
    function get_class(){
        return structure;
    }
    function get_name_by_id(id){
        var name = "";
        area.forEach(function(value){
            if(value.id==id){
                name = value.name;
                return ;
            }
        })
        return name;
    }
    return{
        update:update,
        get:get_class,
        get_name_by_id:get_name_by_id ,
        to_param :get_classarr_by_class
    }
})()

/*
*验证权限
 */
exports.check = (function(){
    var token = JSON.parse(fs.readFileSync(__dirname+"/../../shared/appConfig")).token;
    var sha1 = crypto.createHash('sha1')
    return function(req,res,next){
        if(req.query.timestamp&req.query.check){
            sha1.update(token);
            sha1.update(req.query.timestamp);
            if(req.query.check==sha1.digest('hex')){
                next();
            }
            else
                res.send(JSON.stringify({code:"-10","err":"permission denied"}))
        }
        else
            res.send(JSON.stringify({code:"-10","err":"permission denied"}))
    }
})()

